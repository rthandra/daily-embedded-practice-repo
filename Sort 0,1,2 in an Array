Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.


Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]

SOLUTION: 
void sortColors(int* nums, int numsSize) {
    int left = 0;
    int right = numsSize-1;
    int i = 0;

    while(i <= right){
        //left should always have 0, right should have 2 
        if(nums[i] == 2){ //if i is equal to 2, swap it with right
            int temp = nums[i];
            nums[i] = nums[right];
            nums[right] = temp;
            right--;

        }
        else if(nums[i] == 0){ //if i is equal to 0, swap it with left, increment i
            int temp = nums[i];
            nums[i] = nums[left];
            nums[left] = temp;
            left++;
            i++;
        }
        else{
            i++; //move past if it is 1
        }  

    }
    
}
