Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.
Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "Mr Ding"
Output: "rM gniD"

char* reverseWords(char* s) {
    //logic: at every end of the word swap that word's start and end
    //i will be traversing until there is a space, and then swapping logic happens

    int start = 0;

    for(int i = 0; i <= strlen(s); i++){ // use <= not < because because end - 1 needs to be calculated
        if(s[i] == ' ' || s[i] == '\0'){ //space encountered, end of word or not end of string
            int end = i-1; //end will be the word's last char
            //we swap start and end 

            while(start<end){
            char temp = s[start];
            s[start] = s[end];
            s[end] = temp;
            start++;
            end--;  
            }

            start = i+1; //we want start to point to the next value of i
        }
            
    }

    return s;

}

