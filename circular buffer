/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>
// circular buffer - FIFO

typedef enum {
    CB_NO_ERR = 0,
    CB_FULL,
    CB_NOT_FULL,
    CB_EMPTY,
    CB_NOT_EMPTY,
    CB_NULL,
}CB_Status;

//structure of buffer
typedef struct{
    uint8_t *base; //start point in the memory
    uint8_t head; //traverse the buffer
    uint8_t tail; //end of buffer
    uint32_t count; // total no of added items stored currently
    uint32_t length; // total size of buffer
}C_Buff;

C_Buff cBuff;
cBuff->base = (uint8_t*) malloc(length);

//checking if buff is NULL or CB_FULL

CB_STATUS cb_ADD(C_Buff *cBuff,uint8_t item){
    if(!cBuff || !cBuff->base){
        return CB_NULL;
    }
    
    //add item to head(index) pos
    cBuff->base[cBuff->head] = item;
    
    //wrap buffer
    cBuff->head = (cBuff->head+1) % cbuff->length;
    
    //increase count
    cBuff->count++;
}

