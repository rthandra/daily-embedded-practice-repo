/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
bool hasCycle(struct ListNode *head) {
    struct ListNode *fastPtr = head;
    struct ListNode *slowPtr = head;

    while(fastPtr != NULL && fastPtr->next != NULL){ //make sure that fastPtr has value and a circular list
        slowPtr = slowPtr->next;
        fastPtr = fastPtr->next->next;

        if(slowPtr == fastPtr){
            return true;
        }
       
    }
    return false;
    
}
