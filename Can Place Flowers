You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.

Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return true if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.
Example 1:
Input: flowerbed = [1,0,0,0,1], n = 1
Output: true

Example 2:
Input: flowerbed = [1,0,0,0,1], n = 2
Output: false

SOLUTION:

bool canPlaceFlowers(int* flowerbed, int flowerbedSize, int n) {
    // iterate the loop, check if previous value, current value and next value and next value is 0
    // place 1 and decrement n 
    // edge case = [001] //need to check if it needs to be placed in the start of the index

    for(int i = 0; i < flowerbedSize && n > 0; i++){
        if(flowerbed[i]==0 && //checking if current value is empty
            (i == 0 || flowerbed[i-1] == 0) && //checking if current index is 0 (first element) or checking prev is 0
            (i == flowerbedSize-1 || flowerbed[i+1] == 0)){ //checking if current index is last element or checking next is 0
                flowerbed[i] = 1; //place 1 
                n--;//if multiple plants, reduce n if one plant is placed
                i++; //want i to check consecutively
            }
                 
    }
    if (n <= 0) {
    return true;
    } else {
    return false;
}
    
}
