You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.


SOLUTION IN C


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 //Use . when accessing struct members through a struct variable.
//Use -> when accessing struct members through a pointer to a struct.

struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2) {
    struct ListNode list3;
    struct ListNode *dummy = &list3;
    list3.next = NULL;//fresh list/placeholder

    while(list1 != NULL && list2 != NULL){
        if(list1->val <= list2->val){
            dummy->next = list1;
            list1 = list1->next;
        }
        else{
            dummy->next = list2;
            list2 = list2->next;
        }
        dummy = dummy->next; //traversing through the list
    }
    //if extra values available
    if(list1 != NULL){
        dummy->next = list1;
    }
    else{
        dummy->next = list2;
    }

    return list3.next;

    
}
