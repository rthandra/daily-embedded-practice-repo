/*Find Xor of a number without using XOR operator
XOR -> 0^0 = 0 , 0^1 = 11
5^6 = 0101 ^ 0110 => 0011 -> 3
5&6 = 0100 - 1 = 3

9 ^ 3 = 1001 ^ 0011 = 1010 -> 10 
9 & 3 = 0001 -

3^2 = 0011 ^ 0010 = 0001
3&2 = 0010 - 1 = 0001

trick is to & and subract by 1 -> this does not work, only works for few examples

METHOD 2:

~a = 1010, ~b = 1001
Exactly one of a or b is 1” can be expressed as:
a & ~b | ~a & b -> this gives the unique element which is different in a and b 
0101 & 1001 | 1010 & 0110
= 0001 | 0010
= 0011

*/
#include <stdio.h>
#include <stdint.h>

int main()
{
    int a = 0;
    int b = 0;
    uint32_t result = 0;
    
    scanf("%d %d", &a, &b);
    
    result = (a & (~b)) | ((~a) & b);
    printf("result = %d", result);

    return 0;
}
