#include <stdio.h>
// LIFO buffer - last in first out

//structure of buffer

typedef struct{
    uint32_t length;
    uint8_t * base;
    uint8_t * head;
} LIFO_buf;

typedef enum {
    LB_NO_ERR = 0;
    LB_FULL;
    LB_NOT_FULL;
    LB_EMPTY;
    LB_NOT_EMPTY;
    LB_NULL;
}LB_Status;


LIFO_buf lbuf; //instance of LIFO_buf

//initialization
lbuf.base = (uint8_t*) malloc(length);
lbuf.length = length;
lbuf.head = lbuf.base;

//checking if buffer is full and add
LB_Status bufFull(LIFO_buf *lbuf, uint8_t item){
    if(!lbuf || !lbuf->head || !lbuf->base){
        return LB_NULL;
    }
    if(lbuf->head => (lbuf->base + lbuf->length)) {
        return LB_FULL;
    }
    else{
        return LB_NOT_FULL;
    }
    
    *lbuf->head = item;
    lbuf->head++;
}


int main()
{
    printf("Hello World");

    return 0;
}
