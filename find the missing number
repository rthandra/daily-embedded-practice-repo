#include <stdio.h>
/*

step 1: XOR all the numbers in the array with the range of numbers, that will return the missing no
*/

int arrayXOR(int *arr, int range){
    
    int arrResult = 0;
    int rangeResult = 0;
    
    for(int i = 0; i < range - 1; i++){
        arrResult ^= arr[i]; 
    }
    
   for(int i = 1; i <= range; i++){
       rangeResult ^= i;
   }
   
   return arrResult^rangeResult;
    
 }

int main()
{
    int a[] = {1,3,4};
    int n = 4;
    
    int result = arrayXOR(a, n); //&a is the address of the whole array
    
    printf("result = %d\n", result);
    
    return 0;
}

//second method:

void missing(int *arr, int n){
    int sum = 0;
    for(int i = 0; i < n; i++){
        sum += arr[i];
    }
    printf("sum = %d\n", sum); 
    int total = 0;
    //total = n * (n+1) / 2;
    total = (n+1) * (n+2) / 2; //include the missing num
    printf("total = %d\n", total); 
    int missing = total - sum;
    printf("missing = %d\n", missing);
    
}

int main(){
    
    int arr[] = {1,2,5,4};
    int n = sizeof(arr)/sizeof(arr[0]);
    printf("n = %d\n", n);
    missing(arr,n);
    
    return 0;
}

