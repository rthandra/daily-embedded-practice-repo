  //SWAP 2 BITS IN GIVEN LOCATIONS
  //Given an integer â€˜nâ€˜ and two positions, i and j, you must swap the ith and jth bits of the number n
    
    int n = 0b10110101;
    int i = 3;
    int j = 7;
    int bitmask = 0;
    
    if (((n >> i) & 1) != ((n >> j) & 1)){
        bitmask = (1 << i) | (1 << j);   
        n = n ^ bitmask;
    }

//method 2:

void swap(int n, int x, int y){
    int xMask = ((n >> x) & 1); 
    int yMask = ((n >> y) & 1); 
    
    if(xMask ^ yMask){
        n ^= (1 << x) | (1 << y);
        printf("n = %d\n", n);
    }

}

int main(){
    
    int n = 8;
    int x,y = 0;
    scanf(" %d %d", &x, &y);
    
    swap(n, x, y);
    
    return 0;
}
