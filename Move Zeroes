Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:

Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]
Example 2:

Input: nums = [0]
Output: [0]


SOLUTION:

void moveZeroes(int* nums, int numsSize) {
    //trick: one pointer for iterating the array, one pointer for the zero element
    //whenever there is a non-zero no, swap it with j
    //whenever there is zero element, i moves j is stuck. This captures all the j's in th end 
    int j = 0;
    for (int i = 0; i < numsSize; i++){
        if (nums[i] != 0) {
            nums[j] = nums[i]; //[1,3,12,0,0] 
            j++;
        }

    }
    while(j < numsSize){
        nums[j] = 0;
        j++;
    }
}
